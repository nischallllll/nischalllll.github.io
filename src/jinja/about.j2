<!-- about.j2 -->
<article class="about  active" data-page="about">
  <header>
    <h2 class="h2 article-title">{{about.HEADER.label}}</h2>
    <div class="about-toggle-row">
      <!-- Toggle switch for short/long version (placed under the title, left-aligned) -->
      <label class="toggle-switch" aria-label="Toggle short/long presentation">
        <input type="checkbox" id="about-toggle" class="toggle-checkbox" checked>
        <span class="toggle-slider" aria-hidden="true"></span>
      </label>
    </div>
  </header>

  <section class="about-text">

    {# Normalize short presentation from either top-level or under PRESENTATION #}
    {% set short_present = None %}
    {% if about.short_presentation is defined %}
      {% set short_present = about.short_presentation %}
    {% elif about.PRESENTATION is defined and about.PRESENTATION.short_presentation is defined %}
      {% set short_present = about.PRESENTATION.short_presentation %}
    {% endif %}

    {% if short_present is not none %}
    <!-- Long version (hidden by default) -->
    <div id="long-version" style="display: none;">
      {% set printed = namespace(flag=false) %}
      {% for line in about.PRESENTATION.description.split('\n') %}
        {% if line.strip() %}
          {% if not printed.flag %}
            <p class="lead">{{ line | safe }}</p>
            {% set printed.flag = true %}
          {% else %}
            <p>{{ line | safe }}</p>
          {% endif %}
        {% endif %}
      {% endfor %}
    </div>

    <!-- Short version -->
    <div id="short-version">
      {% set printed_s = namespace(flag=false) %}
      {% for line in short_present.split('\n') %}
        {% if line.strip() %}
          {% if not printed_s.flag %}
            <p class="lead">{{ line | safe }}</p>
            {% set printed_s.flag = true %}
          {% else %}
            <p>{{ line | safe }}</p>
          {% endif %}
        {% endif %}
      {% endfor %}
    </div>

  {% else %}

    <!-- No short version provided: show full presentation only -->
    <div id="long-version">
      {% set printed = namespace(flag=false) %}
      {% for line in about.PRESENTATION.description.split('\n') %}
        {% if line.strip() %}
          {% if not printed.flag %}
            <p class="lead">{{ line | safe }}</p>
            {% set printed.flag = true %}
          {% else %}
            <p>{{ line | safe }}</p>
          {% endif %}
        {% endif %}
      {% endfor %}
    </div>

    {% endif %}

  </section>

  <!--- DOING -->
  {% if about.DOING.enabled %}
  <section class="service">
    <h3 class="h3 service-title">{{about.DOING.label}}</h3>
    <ul class="service-list">
      {% for item in about.DOING["items"] %}
      <li class="service-item">
        <div class="service-icon-box">
          <img src="{{item.icon}}" alt="design icon" width="30" height="30">
        </div>
        <div class="service-content-box">
          <h4 class="h4 service-item-title">{{item.title}}</h4>
          <p class="service-item-text">
            {{item.description}}
          </p>
        </div>
      </li>
      {% endfor %}
    </ul>
  </section>
  {% endif %}

  <!--- CURRENT -->
  {% if about.CURRENT.enabled %}
  <section class="testimonials">
    <h3 class="h3 testimonials-title">{{about.CURRENT.label}}</h3>
    <ul class="testimonials-list has-scrollbar">
      {% for item in about.CURRENT["items"] %}
      <li class="testimonials-item">
        <div class="content-card" data-testimonials-item>
          <figure class="testimonials-avatar-box">
            <img src="{{item.icon}}" alt="{{item.title}}" width="60" data-testimonials-avatar>
          </figure>
          <h4 class="h4 testimonials-item-title" data-testimonials-title>{{item.title}}</h4>
          <div class="testimonials-text" data-testimonials-text>
            <p>
              {{item.description}}
            </p>
          </div>
        </div>
      </li>
      {% endfor %}
    </ul>
  </section>

  <!--- popup modal -->
  <div class="modal-container" data-modal-container>
    <div class="overlay" data-overlay></div>
    <section class="testimonials-modal">
      <button class="modal-close-btn" data-modal-close-btn>
        <ion-icon name="close-outline"></ion-icon>
      </button>
      <div class="modal-img-wrapper">
        <figure class="modal-avatar-box">
          <img src="config/assets/avatars/avatar-1.png" alt="{{profile.USER.name}}" width="80" data-modal-img>
        </figure>
        <img src="./src/images/icon-quote.svg" alt="quote icon">
      </div>
      <div class="modal-content">
        <h4 class="h3 modal-title" data-modal-title>{{profile.USER.name}}</h4>
        <div data-modal-text>
          <p>
          </p>
        </div>
      </div>
    </section>
  </div>
  {% endif %}

  <!--- TECHNOLOGIES-->
  {% if about.TECHNOLOGIES.enabled %}
  <section class="clients">
    <h3 class="h3 clients-title">{{about.TECHNOLOGIES.label}}</h3>
    <ul class="clients-list has-scrollbar">
      {% for item in about.TECHNOLOGIES["items"] %}
      <li class="clients-item">
        <a href="#">
          <img src="{{item.icon}}" alt="{{item.title}}" width="50" height="50">
        </a>
      </li>
      {% endfor %}
    </ul>
  </section>
  {% endif %}

  {# Inline page script: keeps toggle behavior local and simple #}
  <script>
    (function(){
      const toggle = document.getElementById('about-toggle');
      const longVersion = document.getElementById('long-version');
      const shortVersion = document.getElementById('short-version');
      const storageKey = 'aboutPresentationIsShort_v1';

      function showWithAnimation(showEl, hideEl) {
        try {
          if (!showEl || !hideEl) return;
          // Prepare
          showEl.classList.remove('fade-slide-exit-active', 'fade-slide-exit');
          hideEl.classList.remove('fade-slide-enter-active', 'fade-slide-enter');

          // Start hiding old
          hideEl.classList.add('fade-slide-exit');
          // allow a frame
          requestAnimationFrame(() => {
            hideEl.classList.add('fade-slide-exit-active');
            hideEl.addEventListener('transitionend', function onEnd() {
              hideEl.removeEventListener('transitionend', onEnd);
              hideEl.style.display = 'none';
              // show new
              showEl.style.display = '';
              showEl.classList.add('fade-slide-enter');
              requestAnimationFrame(() => showEl.classList.add('fade-slide-enter-active'));
            });
          });
        } catch (e) {
          // fallback
          hideEl.style.display = 'none';
          showEl.style.display = '';
        }
      }

      function setView(isShort) {
        if (!longVersion || !shortVersion) return;
        try { localStorage.setItem(storageKey, isShort ? '1' : '0'); } catch(e){}
        if (toggle) toggle.checked = isShort;
        if (isShort) {
          showWithAnimation(shortVersion, longVersion);
        } else {
          showWithAnimation(longVersion, shortVersion);
        }
      }

      // initialize from storage if available; otherwise default to short when toggle exists
      try {
        const saved = localStorage.getItem(storageKey);
        if (saved !== null) {
          setView(saved === '1');
        } else if (toggle) {
          setView(toggle.checked);
        }
      } catch(e) {}

      if (toggle) {
        toggle.addEventListener('change', function() {
          setView(this.checked);
        });
      }
    })();
  </script>

</article>